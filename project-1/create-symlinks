#!/usr/bin/bash

# check if script ran with root privileges
if [ $EUID != 0 ]; then
  echo "$0 This script requires root privileges"
  exit 1
fi

# default values/behaviours
target_user=$SUDO_USER
flags=""


usage () {
	echo "Usage: $0 [OPTIONS]"
	echo "Options:"
	echo " -h						Display this help message"
	echo " -f						Force copying /etc/skel into new user's home directory"
}

while getopts ":f" opts; do
	case $opts in
		f)
			flags="$flags -f"
			;;
		*|h|help)
			usage
			exit 1
			;;
	esac
done


# symlink_targets: associative array of target dir/files for the symbolic links.
# [target]=link_name
# links go into home directory
declare -A symlink_targets
symlink_targets["$(pwd)/bin"]="bin"
symlink_targets["$(pwd)/config"]=".config"
symlink_targets["$(pwd)/home/bashrc"]=".bashrc"

# req_packages: files in config require these packages to be installed
declare -a req_packages=("kakoune" "tmux")


# let's assume they're not doing this as the root user...
home_dir="/home/$target_user"

# Check if the configuration files exist
for target in ${!symlink_targets[@]}; do
	# Check the if the file exists
	if [[ ! -e "$target" ]]; then
		echo "$0: config file or dir not found: $target"
		exit 1
	fi
done

# Check if required packages are installed on the system
for package in ${req_packages[@]};do
	output=$(pacman -Q $package)
	if [[ $? -eq 1 ]];then
		echo "$0: $output"
		exit 1
	fi
done

# Check the if the home directory exists
if [[ ! -d $home_dir ]]; then
	echo "$0: $home_dir is not a directory "
	exit 1
fi

# create symlinks for config files in home directory
for target in ${!symlink_targets[@]};do
	ln -s $flags "$target" "$home_dir/${symlink_targets[$target]}" 
done

echo "$0: script complete"


